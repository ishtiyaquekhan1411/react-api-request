{"ast":null,"code":"var _jsxFileName = \"/home/deq/react-training/udemy/api-request/src/App.js\";\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchMovies\n  } = useHttp();\n  const fetchRequestConfig = useMemo(() => {\n    return {\n      url: 'https://react-http-7bb32-default-rtdb.firebaseio.com/movies.json'\n    };\n  }, []);\n  const transfromMoviesData = useCallback(data => {\n    const loadedMovies = [];\n\n    for (const key in data) {\n      loadedMovies.push({\n        id: key,\n        title: data[key].title,\n        openingText: data[key].openingText,\n        releaseDate: data[key].releaseDate\n      });\n    }\n\n    setMovies(loadedMovies);\n  }, []);\n  useEffect(() => {\n    fetchMovies(fetchRequestConfig, transfromMoviesData);\n  }, [fetchRequestConfig, fetchMovies, transfromMoviesData]);\n\n  const addMovieHandler = movie => setMovies(prevState => prevState.concat(movie));\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Found no movies.\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  console.log(movies);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovies.bind(null, fetchRequestConfig, transfromMoviesData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/deq/react-training/udemy/api-request/src/App.js"],"names":["React","useState","useEffect","useCallback","useMemo","MoviesList","AddMovie","useHttp","App","movies","setMovies","isLoading","error","sendRequest","fetchMovies","fetchRequestConfig","url","transfromMoviesData","data","loadedMovies","key","push","id","title","openingText","releaseDate","addMovieHandler","movie","prevState","concat","content","length","console","log","bind"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const {isLoading, error, sendRequest: fetchMovies} = useHttp();\n  const fetchRequestConfig = useMemo(() => { return { url: 'https://react-http-7bb32-default-rtdb.firebaseio.com/movies.json' } }, []);\n\n  const transfromMoviesData = useCallback((data) => {\n    const loadedMovies = [];\n\n    for (const key in data) {\n      loadedMovies.push({\n        id: key,\n        title: data[key].title,\n        openingText: data[key].openingText,\n        releaseDate: data[key].releaseDate\n      });\n    }\n    setMovies(loadedMovies);\n  }, [])\n\n  useEffect(() => {\n    fetchMovies(fetchRequestConfig, transfromMoviesData);\n  }, [fetchRequestConfig, fetchMovies, transfromMoviesData]);\n\n  const addMovieHandler = (movie) => setMovies(prevState => prevState.concat(movie));\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  console.log(movies);\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMovies.bind(null, fetchRequestConfig, transfromMoviesData)}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}