{"ast":null,"code":"var _jsxFileName = \"/home/deq/react-training/udemy/api-request/src/components/AddMovie.js\";\nimport React, { useRef } from 'react';\nimport useHttp from '../hooks/use-http';\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n  const {\n    sendRequest: postRequest\n  } = useHttp();\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value\n    }; // could add validation here...\n\n    postRequest({\n      url: 'https://react-http-7bb32-default-rtdb.firebaseio.com/movies.json',\n      method: 'POST',\n      body: movie,\n      header: {\n        'Content-Type': 'application/json'\n      }\n    });\n    props.onAddMovie(movie);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    ref: titleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"opening-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Opening Text\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"5\",\n    id: \"opening-text\",\n    ref: openingTextRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Release Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"date\",\n    ref: releaseDateRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Add Movie\"));\n}\n\nexport default AddMovie;","map":{"version":3,"sources":["/home/deq/react-training/udemy/api-request/src/components/AddMovie.js"],"names":["React","useRef","useHttp","classes","AddMovie","props","titleRef","openingTextRef","releaseDateRef","sendRequest","postRequest","submitHandler","event","preventDefault","movie","title","current","value","openingText","releaseDate","url","method","body","header","onAddMovie","control"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAMC,QAAQ,GAAGL,MAAM,CAAC,EAAD,CAAvB;AACA,QAAMM,cAAc,GAAGN,MAAM,CAAC,EAAD,CAA7B;AACA,QAAMO,cAAc,GAAGP,MAAM,CAAC,EAAD,CAA7B;AACA,QAAM;AAAEQ,IAAAA,WAAW,EAAEC;AAAf,MAA+BR,OAAO,EAA5C;;AAEA,WAASS,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,KAAK,GAAG;AACZC,MAAAA,KAAK,EAAET,QAAQ,CAACU,OAAT,CAAiBC,KADZ;AAEZC,MAAAA,WAAW,EAAEX,cAAc,CAACS,OAAf,CAAuBC,KAFxB;AAGZE,MAAAA,WAAW,EAAEX,cAAc,CAACQ,OAAf,CAAuBC;AAHxB,KAAd,CAH4B,CAQ5B;;AACAP,IAAAA,WAAW,CACT;AACEU,MAAAA,GAAG,EAAE,kEADP;AAEEC,MAAAA,MAAM,EAAE,MAFV;AAGEC,MAAAA,IAAI,EAAER,KAHR;AAIES,MAAAA,MAAM,EAAE;AAAE,wBAAgB;AAAlB;AAJV,KADS,CAAX;AASAlB,IAAAA,KAAK,CAACmB,UAAN,CAAiBV,KAAjB;AACD;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAEH,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACsB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,OAAtB;AAA8B,IAAA,GAAG,EAAEnB,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACsB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,cAAtB;AAAqC,IAAA,GAAG,EAAElB,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eASE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACsB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,MAAtB;AAA6B,IAAA,GAAG,EAAEjB,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,CADF;AAiBD;;AAED,eAAeJ,QAAf","sourcesContent":["import React, { useRef } from 'react';\nimport useHttp from '../hooks/use-http';\n\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n  const { sendRequest: postRequest } = useHttp();\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n    // could add validation here...\n    postRequest(\n      {\n        url: 'https://react-http-7bb32-default-rtdb.firebaseio.com/movies.json',\n        method: 'POST',\n        body: movie,\n        header: { 'Content-Type': 'application/json' }  \n      },\n\n    )\n    props.onAddMovie(movie);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='text' id='date' ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n"]},"metadata":{},"sourceType":"module"}